{"version":3,"sources":["./src/app/pages/ingreso-local/ingreso-local-routing.module.ts","./src/app/pages/ingreso-local/ingreso-local.module.ts","./src/app/pages/ingreso-local/ingreso-local.page.ts","./src/app/pages/ingreso-local/ingreso-local.page.scss","./src/app/pages/ingreso-local/ingreso-local.page.html"],"names":[],"mappings":"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","file":"src_app_pages_ingreso-local_ingreso-local_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IngresoLocalPage } from './ingreso-local.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IngresoLocalPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class IngresoLocalPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { IngresoLocalPageRoutingModule } from './ingreso-local-routing.module';\r\n\r\nimport { IngresoLocalPage } from './ingreso-local.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    IngresoLocalPageRoutingModule\r\n  ],\r\n  declarations: [IngresoLocalPage]\r\n})\r\nexport class IngresoLocalPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { QRService } from 'src/app/services/qr.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-ingreso-local',\r\n  templateUrl: './ingreso-local.page.html',\r\n  styleUrls: ['./ingreso-local.page.scss'],\r\n})\r\nexport class IngresoLocalPage implements OnInit {\r\n\r\n  listaEspera : boolean = false;\r\n  usuario: any\r\n  constructor(private qrS: QRService, public userService : AuthService, private route : Router) {\r\n    this.userService.TraerGenerico('clientes','uid', this.userService.usuarioActual.uid).subscribe(res =>{\r\n      this.usuario = res[0];\r\n      this.userService.usuarioActual = res[0];\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  EntrarEnListaEspera(){\r\n    this.listaEspera = true;\r\n    this.usuario.listaEspera = true;\r\n    this.userService.updateListaEsperaCliente(this.usuario?.id,true);\r\n  }\r\n\r\n  \r\n\r\n  Scan(){\r\n    \r\n    if(!this.usuario.listaEspera && this.usuario.mesaAsignada !== 0){\r\n\r\n          Swal.fire({\r\n            title: 'Escaneo',\r\n            backdrop: false,\r\n            text: 'Escanee el código QR para ingresar a la lista',\r\n            imageWidth: 400,\r\n            imageHeight: 200,\r\n            imageAlt: 'Custom image',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Escanear',\r\n            cancelButtonText: 'Cancelar',\r\n            reverseButtons: true,\r\n          }).then(async (result) => {\r\n            \r\n            if (result.isConfirmed) {\r\n              let datos = await this.qrS.scan();\r\n\r\n              if(datos.text){\r\n                if(datos.text == \"ingresoListaDeEspera\"){\r\n                  this.EntrarEnListaEspera();\r\n                }\r\n              }\r\n                \r\n              }\r\n            \r\n          });\r\n\r\n    }else if(this.usuario.listaEspera && this.usuario.mesaAsignada != 0){//CASO EN EL QUE EL CLIENTE YA HAYA SIDO ACEPTADO EN LA LISTA Y TIENE MESA ASIGNADA\r\n\r\n        Swal.fire({\r\n          title: 'Escaneo',\r\n          backdrop: false,\r\n          text: `Escanee el código QR de la mesa que se le asignó ${this.usuario.mesaAsignada}.`,\r\n          imageWidth: 400,\r\n          imageHeight: 200,\r\n          imageAlt: 'Custom image',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Escanear',\r\n          cancelButtonText: 'Cancelar',\r\n          reverseButtons: true,\r\n        }).then(async (result) => {\r\n          console.log('then');\r\n          if (result.isConfirmed) {\r\n            let datos = await this.qrS.scan();\r\n            console.log(datos);\r\n            if(datos.text){\r\n              console.log(datos.text);\r\n              if(datos.text == this.usuario.mesaAsignada){\r\n                this.route.navigateByUrl('/realizar-pedido');\r\n              }else{\r\n                Swal.fire({\r\n                  title:\"Error\",\r\n                  icon: 'error',\r\n                  text:'No se le asignó esa mesa.',\r\n                  timer: 4000,\r\n                  timerProgressBar: true,\r\n                  backdrop: false,\r\n                });\r\n              }\r\n            }\r\n              \r\n            }\r\n          \r\n        });\r\n\r\n    }else if(!this.usuario.listaEspera && this.usuario.mesaAsignada == 0){\r\n      \r\n      Swal.fire({\r\n        title: 'Escaneo',\r\n        backdrop: false,\r\n        text: `Escanee el código QR de ingreso a la lista de espera para ver los gráficos.`,\r\n        imageWidth: 400,\r\n        imageHeight: 200,\r\n        imageAlt: 'Custom image',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Escanear',\r\n        cancelButtonText: 'Cancelar',\r\n        reverseButtons: true,\r\n      }).then(async (result) => {\r\n  \r\n        if (result.isConfirmed) {\r\n          let datos = await this.qrS.scan();\r\n          console.log(datos);\r\n\r\n          if(datos.text){\r\n            if(datos.text == \"ingresoListaDeEspera\"){\r\n              this.route.navigateByUrl('/grafico-cliente');\r\n            }else{\r\n              Swal.fire({\r\n                title:\"Error\",\r\n                icon: 'error',\r\n                text:'No se le asignó esa mesa.',\r\n                timer: 4000,\r\n                timerProgressBar: true,\r\n                backdrop: false,\r\n              })\r\n            }\r\n          }\r\n            \r\n          }\r\n        \r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"ion-content {\\n  --background: url('a.jpg') left 100%;\\n  background-repeat: no-repeat;\\n  background-attachment: fixed !important;\\n}\\n\\n.bg {\\n  background-color: #232323a1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZ3Jlc28tbG9jYWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0NBQUE7RUFDQSw0QkFBQTtFQUNBLHVDQUFBO0FBQ0o7O0FBRUE7RUFDSSwyQkFBQTtBQUNKIiwiZmlsZSI6ImluZ3Jlc28tbG9jYWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XHJcbiAgICAtLWJhY2tncm91bmQ6IHVybCgnLi4vLi4vLi4vYXNzZXRzL2EuanBnJykgbGVmdCAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmJne1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzMjMyM2ExO1xyXG59Il19 */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Ingreso al local</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-menu-button menu=\\\"first\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"container text-light\\\">\\r\\n    <div class=\\\"row align-items-center justify-content-center\\\" style=\\\"height:90vh;\\\">\\r\\n      <div class=\\\"col-12 text-center bg\\\">\\r\\n        <h1 class=\\\"display-5 fw-bold lh-1 m-0 p-0\\\">Bienvenido a Churrasic Park</h1>\\r\\n        <p *ngIf=\\\"!this.usuario?.listaEspera && !this.usuario?.mesaAsignada\\\" class=\\\"lead fw-bold\\\">Por favor, ingrese a\\r\\n          la lista de espera y espere a que un metre le asigne una mesa.</p>\\r\\n        <i *ngIf=\\\"!this.usuario?.listaEspera && !this.usuario?.mesaAsignada\\\" class=\\\"fas fa-qrcode pt-3 ps-2 mb-3\\\"\\r\\n          (click)=\\\"Scan()\\\" style=\\\"font-size: 55px;\\\"></i>\\r\\n        <div *ngIf=\\\"this.usuario?.listaEspera && !this.usuario?.mesaAsignada\\\"\\r\\n          class=\\\"d-grid d-md-flex justify-content-md-start\\\">\\r\\n          <label class=\\\"fw-bold\\\">Entraste a la lista de espera! Esperá a que un empleado te asigne una mesa.</label>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"this.usuario?.mesaAsignada\\\" class=\\\"d-grid gap-2 d-md-flex justify-content-md-start\\\">\\r\\n          <label class=\\\"fw-bold\\\">Ya tenes una mesa asignada ({{this.usuario?.mesaAsignada}}), scanea el QR de tu\\r\\n            mesa</label>\\r\\n          <i class=\\\"fas fa-qrcode pt-3 ps-2 mb-3\\\" (click)=\\\"Scan()\\\" style=\\\"font-size: 55px !important;\\\"></i>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!this.usuario?.listaEspera && this.usuario?.mesaAsignada === 0\\\"\\r\\n          class=\\\"d-grid gap-2 d-md-flex justify-content-md-start\\\">\\r\\n          <label class=\\\"fw-bold mb-2\\\">Escaneá el código QR de la lista de espera para visualizar los gráficos de las\\r\\n            encuestas.</label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}